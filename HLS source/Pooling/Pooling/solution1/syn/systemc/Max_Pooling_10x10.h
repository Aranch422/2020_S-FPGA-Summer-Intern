// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Max_Pooling_10x10_HH_
#define _Max_Pooling_10x10_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Max_Pooling_10x10_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 10,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct Max_Pooling_10x10 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Max_Pooling_10x10(sc_module_name name);
    SC_HAS_PROCESS(Max_Pooling_10x10);

    ~Max_Pooling_10x10();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Max_Pooling_10x10_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* Max_Pooling_10x10_AXILiteS_s_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<4> > ifmap_0_address0;
    sc_signal< sc_logic > ifmap_0_ce0;
    sc_signal< sc_lv<32> > ifmap_0_q0;
    sc_signal< sc_lv<4> > ifmap_1_address0;
    sc_signal< sc_logic > ifmap_1_ce0;
    sc_signal< sc_lv<32> > ifmap_1_q0;
    sc_signal< sc_lv<4> > ifmap_2_address0;
    sc_signal< sc_logic > ifmap_2_ce0;
    sc_signal< sc_lv<32> > ifmap_2_q0;
    sc_signal< sc_lv<4> > ifmap_3_address0;
    sc_signal< sc_logic > ifmap_3_ce0;
    sc_signal< sc_lv<32> > ifmap_3_q0;
    sc_signal< sc_lv<4> > ifmap_4_address0;
    sc_signal< sc_logic > ifmap_4_ce0;
    sc_signal< sc_lv<32> > ifmap_4_q0;
    sc_signal< sc_lv<4> > ifmap_5_address0;
    sc_signal< sc_logic > ifmap_5_ce0;
    sc_signal< sc_lv<32> > ifmap_5_q0;
    sc_signal< sc_lv<4> > ifmap_6_address0;
    sc_signal< sc_logic > ifmap_6_ce0;
    sc_signal< sc_lv<32> > ifmap_6_q0;
    sc_signal< sc_lv<4> > ifmap_7_address0;
    sc_signal< sc_logic > ifmap_7_ce0;
    sc_signal< sc_lv<32> > ifmap_7_q0;
    sc_signal< sc_lv<4> > ifmap_8_address0;
    sc_signal< sc_logic > ifmap_8_ce0;
    sc_signal< sc_lv<32> > ifmap_8_q0;
    sc_signal< sc_lv<4> > ifmap_9_address0;
    sc_signal< sc_logic > ifmap_9_ce0;
    sc_signal< sc_lv<32> > ifmap_9_q0;
    sc_signal< sc_lv<5> > result_address0;
    sc_signal< sc_logic > result_ce0;
    sc_signal< sc_logic > result_we0;
    sc_signal< sc_lv<32> > result_d0;
    sc_signal< sc_lv<5> > indvars_iv_reg_1003;
    sc_signal< sc_lv<5> > indvars_iv_reg_1003_pp0_iter1_reg;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<4> > i_0_reg_1015;
    sc_signal< sc_lv<5> > idx_0_reg_1027;
    sc_signal< sc_lv<32> > phi_ln15_reg_1090;
    sc_signal< sc_lv<32> > phi_ln15_1_reg_1141;
    sc_signal< sc_lv<32> > phi_ln15_2_reg_1207;
    sc_signal< sc_lv<32> > phi_ln15_3_reg_1273;
    sc_signal< sc_lv<32> > phi_ln15_4_reg_1339;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln10_fu_1370_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_2147;
    sc_signal< sc_lv<1> > icmp_ln10_reg_2147_pp0_iter1_reg;
    sc_signal< sc_lv<4> > or_ln15_fu_1376_p2;
    sc_signal< sc_lv<4> > or_ln15_reg_2151;
    sc_signal< sc_lv<6> > zext_ln10_fu_1382_p1;
    sc_signal< sc_lv<6> > zext_ln10_reg_2155;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state3_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<5> > add_ln17_fu_1413_p2;
    sc_signal< sc_lv<5> > add_ln17_reg_2162;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > select_ln14_fu_1430_p3;
    sc_signal< sc_lv<32> > select_ln14_reg_2267;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<32> > select_ln14_1_fu_1444_p3;
    sc_signal< sc_lv<32> > select_ln14_1_reg_2298;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state6_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state7_pp0_stage5_iter0;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<32> > select_ln14_2_fu_1489_p3;
    sc_signal< sc_lv<32> > select_ln14_2_reg_2379;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_state8_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_state9_pp0_stage7_iter0;
    sc_signal< bool > ap_block_pp0_stage7_11001;
    sc_signal< sc_lv<32> > select_ln14_3_fu_1540_p3;
    sc_signal< sc_lv<32> > select_ln14_3_reg_2460;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage8;
    sc_signal< bool > ap_block_state10_pp0_stage8_iter0;
    sc_signal< bool > ap_block_pp0_stage8_11001;
    sc_signal< sc_lv<6> > add_ln17_3_fu_1580_p2;
    sc_signal< sc_lv<6> > add_ln17_3_reg_2491;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage9;
    sc_signal< bool > ap_block_state11_pp0_stage9_iter0;
    sc_signal< bool > ap_block_pp0_stage9_11001;
    sc_signal< sc_lv<4> > i_fu_1590_p2;
    sc_signal< sc_lv<4> > i_reg_2546;
    sc_signal< sc_lv<5> > add_ln10_fu_1596_p2;
    sc_signal< sc_lv<5> > add_ln10_reg_2551;
    sc_signal< sc_lv<32> > select_ln14_4_fu_1608_p3;
    sc_signal< sc_lv<32> > select_ln14_4_reg_2556;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage9_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_i_0_phi_fu_1019_p4;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln16_reg_1040;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln13_reg_1055;
    sc_signal< sc_lv<32> > ap_phi_mux_phi_ln14_phi_fu_1073_p10;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln14_reg_1070;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln15_reg_1090;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln13_1_reg_1106;
    sc_signal< sc_lv<32> > ap_phi_mux_phi_ln14_1_phi_fu_1124_p10;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln14_1_reg_1121;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln15_1_reg_1141;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln16_1_reg_1157;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln13_2_reg_1172;
    sc_signal< sc_lv<32> > ap_phi_mux_phi_ln14_2_phi_fu_1190_p10;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln14_2_reg_1187;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln15_2_reg_1207;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln16_2_reg_1223;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln13_3_reg_1238;
    sc_signal< sc_lv<32> > ap_phi_mux_phi_ln14_3_phi_fu_1256_p10;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln14_3_reg_1253;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln15_3_reg_1273;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln16_3_reg_1289;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln13_4_reg_1304;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_phi_ln13_4_reg_1304;
    sc_signal< sc_lv<32> > ap_phi_mux_phi_ln14_4_phi_fu_1322_p10;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_phi_ln14_4_reg_1319;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln15_4_reg_1339;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_phi_ln15_4_reg_1339;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_phi_ln16_4_reg_1355;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_phi_ln16_4_reg_1355;
    sc_signal< sc_lv<64> > zext_ln17_fu_1419_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > zext_ln17_1_fu_1479_p1;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_lv<64> > zext_ln17_2_fu_1529_p1;
    sc_signal< bool > ap_block_pp0_stage7;
    sc_signal< sc_lv<64> > zext_ln17_3_fu_1585_p1;
    sc_signal< bool > ap_block_pp0_stage9;
    sc_signal< sc_lv<64> > zext_ln17_4_fu_1643_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< bool > ap_block_pp0_stage6;
    sc_signal< bool > ap_block_pp0_stage8;
    sc_signal< sc_lv<32> > select_ln16_fu_1404_p3;
    sc_signal< sc_lv<32> > select_ln16_1_fu_1470_p3;
    sc_signal< sc_lv<32> > select_ln16_2_fu_1520_p3;
    sc_signal< sc_lv<32> > select_ln16_3_fu_1571_p3;
    sc_signal< sc_lv<32> > select_ln16_4_fu_1634_p3;
    sc_signal< sc_lv<1> > icmp_ln15_fu_1386_p2;
    sc_signal< sc_lv<32> > select_ln15_fu_1391_p3;
    sc_signal< sc_lv<1> > icmp_ln16_fu_1398_p2;
    sc_signal< sc_lv<1> > icmp_ln14_fu_1424_p2;
    sc_signal< sc_lv<1> > icmp_ln14_1_fu_1438_p2;
    sc_signal< sc_lv<1> > icmp_ln15_1_fu_1452_p2;
    sc_signal< sc_lv<32> > select_ln15_1_fu_1457_p3;
    sc_signal< sc_lv<1> > icmp_ln16_1_fu_1464_p2;
    sc_signal< sc_lv<1> > icmp_ln14_2_fu_1483_p2;
    sc_signal< sc_lv<1> > icmp_ln15_2_fu_1502_p2;
    sc_signal< sc_lv<32> > select_ln15_2_fu_1507_p3;
    sc_signal< sc_lv<1> > icmp_ln16_2_fu_1514_p2;
    sc_signal< sc_lv<6> > add_ln17_1_fu_1497_p2;
    sc_signal< sc_lv<1> > icmp_ln14_3_fu_1534_p2;
    sc_signal< sc_lv<1> > icmp_ln15_3_fu_1553_p2;
    sc_signal< sc_lv<32> > select_ln15_3_fu_1558_p3;
    sc_signal< sc_lv<1> > icmp_ln16_3_fu_1565_p2;
    sc_signal< sc_lv<6> > add_ln17_2_fu_1548_p2;
    sc_signal< sc_lv<1> > icmp_ln14_4_fu_1602_p2;
    sc_signal< sc_lv<1> > icmp_ln15_4_fu_1616_p2;
    sc_signal< sc_lv<32> > select_ln15_4_fu_1621_p3;
    sc_signal< sc_lv<1> > icmp_ln16_4_fu_1628_p2;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage6_subdone;
    sc_signal< bool > ap_block_pp0_stage7_subdone;
    sc_signal< bool > ap_block_pp0_stage8_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_1155;
    sc_signal< bool > ap_condition_896;
    sc_signal< bool > ap_condition_898;
    sc_signal< bool > ap_condition_902;
    sc_signal< bool > ap_condition_1168;
    sc_signal< bool > ap_condition_1173;
    sc_signal< bool > ap_condition_1049;
    sc_signal< bool > ap_condition_1057;
    sc_signal< bool > ap_condition_1066;
    sc_signal< bool > ap_condition_1046;
    sc_signal< bool > ap_condition_438;
    sc_signal< bool > ap_condition_679;
    sc_signal< bool > ap_condition_468;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_pp0_stage0;
    static const sc_lv<12> ap_ST_fsm_pp0_stage3;
    static const sc_lv<12> ap_ST_fsm_pp0_stage1;
    static const sc_lv<12> ap_ST_fsm_pp0_stage2;
    static const sc_lv<12> ap_ST_fsm_pp0_stage4;
    static const sc_lv<12> ap_ST_fsm_pp0_stage5;
    static const sc_lv<12> ap_ST_fsm_pp0_stage6;
    static const sc_lv<12> ap_ST_fsm_pp0_stage7;
    static const sc_lv<12> ap_ST_fsm_pp0_stage8;
    static const sc_lv<12> ap_ST_fsm_pp0_stage9;
    static const sc_lv<12> ap_ST_fsm_state14;
    static const int C_S_AXI_DATA_WIDTH;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<6> ap_const_lv6_2;
    static const sc_lv<6> ap_const_lv6_3;
    static const sc_lv<6> ap_const_lv6_4;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_1596_p2();
    void thread_add_ln17_1_fu_1497_p2();
    void thread_add_ln17_2_fu_1548_p2();
    void thread_add_ln17_3_fu_1580_p2();
    void thread_add_ln17_fu_1413_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_pp0_stage8();
    void thread_ap_CS_fsm_pp0_stage9();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_pp0_stage6();
    void thread_ap_block_pp0_stage6_11001();
    void thread_ap_block_pp0_stage6_subdone();
    void thread_ap_block_pp0_stage7();
    void thread_ap_block_pp0_stage7_11001();
    void thread_ap_block_pp0_stage7_subdone();
    void thread_ap_block_pp0_stage8();
    void thread_ap_block_pp0_stage8_11001();
    void thread_ap_block_pp0_stage8_subdone();
    void thread_ap_block_pp0_stage9();
    void thread_ap_block_pp0_stage9_11001();
    void thread_ap_block_pp0_stage9_subdone();
    void thread_ap_block_state10_pp0_stage8_iter0();
    void thread_ap_block_state11_pp0_stage9_iter0();
    void thread_ap_block_state12_pp0_stage0_iter1();
    void thread_ap_block_state13_pp0_stage1_iter1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage3_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage4_iter0();
    void thread_ap_block_state7_pp0_stage5_iter0();
    void thread_ap_block_state8_pp0_stage6_iter0();
    void thread_ap_block_state9_pp0_stage7_iter0();
    void thread_ap_condition_1046();
    void thread_ap_condition_1049();
    void thread_ap_condition_1057();
    void thread_ap_condition_1066();
    void thread_ap_condition_1155();
    void thread_ap_condition_1168();
    void thread_ap_condition_1173();
    void thread_ap_condition_438();
    void thread_ap_condition_468();
    void thread_ap_condition_679();
    void thread_ap_condition_896();
    void thread_ap_condition_898();
    void thread_ap_condition_902();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_enable_pp0();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_1019_p4();
    void thread_ap_phi_mux_phi_ln14_1_phi_fu_1124_p10();
    void thread_ap_phi_mux_phi_ln14_2_phi_fu_1190_p10();
    void thread_ap_phi_mux_phi_ln14_3_phi_fu_1256_p10();
    void thread_ap_phi_mux_phi_ln14_4_phi_fu_1322_p10();
    void thread_ap_phi_mux_phi_ln14_phi_fu_1073_p10();
    void thread_ap_phi_reg_pp0_iter0_phi_ln13_4_reg_1304();
    void thread_ap_phi_reg_pp0_iter0_phi_ln14_1_reg_1121();
    void thread_ap_phi_reg_pp0_iter0_phi_ln14_2_reg_1187();
    void thread_ap_phi_reg_pp0_iter0_phi_ln14_3_reg_1253();
    void thread_ap_phi_reg_pp0_iter0_phi_ln14_reg_1070();
    void thread_ap_phi_reg_pp0_iter0_phi_ln15_4_reg_1339();
    void thread_ap_phi_reg_pp0_iter0_phi_ln16_4_reg_1355();
    void thread_ap_phi_reg_pp0_iter1_phi_ln14_4_reg_1319();
    void thread_ap_rst_n_inv();
    void thread_i_fu_1590_p2();
    void thread_icmp_ln10_fu_1370_p2();
    void thread_icmp_ln14_1_fu_1438_p2();
    void thread_icmp_ln14_2_fu_1483_p2();
    void thread_icmp_ln14_3_fu_1534_p2();
    void thread_icmp_ln14_4_fu_1602_p2();
    void thread_icmp_ln14_fu_1424_p2();
    void thread_icmp_ln15_1_fu_1452_p2();
    void thread_icmp_ln15_2_fu_1502_p2();
    void thread_icmp_ln15_3_fu_1553_p2();
    void thread_icmp_ln15_4_fu_1616_p2();
    void thread_icmp_ln15_fu_1386_p2();
    void thread_icmp_ln16_1_fu_1464_p2();
    void thread_icmp_ln16_2_fu_1514_p2();
    void thread_icmp_ln16_3_fu_1565_p2();
    void thread_icmp_ln16_4_fu_1628_p2();
    void thread_icmp_ln16_fu_1398_p2();
    void thread_ifmap_0_address0();
    void thread_ifmap_0_ce0();
    void thread_ifmap_1_address0();
    void thread_ifmap_1_ce0();
    void thread_ifmap_2_address0();
    void thread_ifmap_2_ce0();
    void thread_ifmap_3_address0();
    void thread_ifmap_3_ce0();
    void thread_ifmap_4_address0();
    void thread_ifmap_4_ce0();
    void thread_ifmap_5_address0();
    void thread_ifmap_5_ce0();
    void thread_ifmap_6_address0();
    void thread_ifmap_6_ce0();
    void thread_ifmap_7_address0();
    void thread_ifmap_7_ce0();
    void thread_ifmap_8_address0();
    void thread_ifmap_8_ce0();
    void thread_ifmap_9_address0();
    void thread_ifmap_9_ce0();
    void thread_or_ln15_fu_1376_p2();
    void thread_result_address0();
    void thread_result_ce0();
    void thread_result_d0();
    void thread_result_we0();
    void thread_select_ln14_1_fu_1444_p3();
    void thread_select_ln14_2_fu_1489_p3();
    void thread_select_ln14_3_fu_1540_p3();
    void thread_select_ln14_4_fu_1608_p3();
    void thread_select_ln14_fu_1430_p3();
    void thread_select_ln15_1_fu_1457_p3();
    void thread_select_ln15_2_fu_1507_p3();
    void thread_select_ln15_3_fu_1558_p3();
    void thread_select_ln15_4_fu_1621_p3();
    void thread_select_ln15_fu_1391_p3();
    void thread_select_ln16_1_fu_1470_p3();
    void thread_select_ln16_2_fu_1520_p3();
    void thread_select_ln16_3_fu_1571_p3();
    void thread_select_ln16_4_fu_1634_p3();
    void thread_select_ln16_fu_1404_p3();
    void thread_zext_ln10_fu_1382_p1();
    void thread_zext_ln17_1_fu_1479_p1();
    void thread_zext_ln17_2_fu_1529_p1();
    void thread_zext_ln17_3_fu_1585_p1();
    void thread_zext_ln17_4_fu_1643_p1();
    void thread_zext_ln17_fu_1419_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
