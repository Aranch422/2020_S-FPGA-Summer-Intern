// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matmul_HH_
#define _matmul_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct matmul : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<2> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<32> > a_q0;
    sc_out< sc_lv<2> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<32> > b_q0;
    sc_out< sc_lv<2> > c_address0;
    sc_out< sc_logic > c_ce0;
    sc_out< sc_logic > c_we0;
    sc_out< sc_lv<32> > c_d0;


    // Module declarations
    matmul(sc_module_name name);
    SC_HAS_PROCESS(matmul);

    ~matmul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > i_fu_105_p2;
    sc_signal< sc_lv<2> > i_reg_204;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > zext_ln5_fu_119_p1;
    sc_signal< sc_lv<4> > zext_ln5_reg_209;
    sc_signal< sc_lv<1> > icmp_ln4_fu_99_p2;
    sc_signal< sc_lv<2> > j_fu_129_p2;
    sc_signal< sc_lv<2> > j_reg_218;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > zext_ln7_fu_135_p1;
    sc_signal< sc_lv<4> > zext_ln7_reg_223;
    sc_signal< sc_lv<1> > icmp_ln5_fu_123_p2;
    sc_signal< sc_lv<2> > c_addr_reg_228;
    sc_signal< sc_lv<2> > k_fu_155_p2;
    sc_signal< sc_lv<2> > k_reg_236;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln6_fu_149_p2;
    sc_signal< sc_lv<32> > a_load_reg_251;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > b_load_reg_256;
    sc_signal< sc_lv<32> > mul_ln7_fu_197_p2;
    sc_signal< sc_lv<32> > mul_ln7_reg_261;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > i_0_reg_66;
    sc_signal< sc_lv<2> > j_0_reg_77;
    sc_signal< sc_lv<2> > k_0_reg_88;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > zext_ln7_1_fu_144_p1;
    sc_signal< sc_lv<64> > zext_ln7_3_fu_170_p1;
    sc_signal< sc_lv<64> > zext_ln7_5_fu_192_p1;
    sc_signal< sc_lv<3> > tmp_fu_111_p3;
    sc_signal< sc_lv<4> > add_ln7_fu_139_p2;
    sc_signal< sc_lv<4> > zext_ln7_2_fu_161_p1;
    sc_signal< sc_lv<4> > add_ln7_1_fu_165_p2;
    sc_signal< sc_lv<3> > tmp_1_fu_175_p3;
    sc_signal< sc_lv<4> > zext_ln7_4_fu_183_p1;
    sc_signal< sc_lv<4> > add_ln7_2_fu_187_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_add_ln7_1_fu_165_p2();
    void thread_add_ln7_2_fu_187_p2();
    void thread_add_ln7_fu_139_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_c_address0();
    void thread_c_ce0();
    void thread_c_d0();
    void thread_c_we0();
    void thread_i_fu_105_p2();
    void thread_icmp_ln4_fu_99_p2();
    void thread_icmp_ln5_fu_123_p2();
    void thread_icmp_ln6_fu_149_p2();
    void thread_j_fu_129_p2();
    void thread_k_fu_155_p2();
    void thread_mul_ln7_fu_197_p2();
    void thread_tmp_1_fu_175_p3();
    void thread_tmp_fu_111_p3();
    void thread_zext_ln5_fu_119_p1();
    void thread_zext_ln7_1_fu_144_p1();
    void thread_zext_ln7_2_fu_161_p1();
    void thread_zext_ln7_3_fu_170_p1();
    void thread_zext_ln7_4_fu_183_p1();
    void thread_zext_ln7_5_fu_192_p1();
    void thread_zext_ln7_fu_135_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
